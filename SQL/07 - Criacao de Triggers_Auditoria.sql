/*Criação da Tabela de Auditoria
Essa tabela será utilizada para armazenar as informações de auditoria, como quem fez a alteração, quando foi feita, qual foi a operação e os dados antigos/novos.*/


-- Tabela de Auditoria
CREATE TABLE Auditoria (
    ID_AUDITORIA NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TABELA_ALTERADA VARCHAR2(50) NOT NULL,
    OPERACAO VARCHAR2(10) CHECK (OPERACAO IN ('INSERT', 'UPDATE', 'DELETE')),
    DATA_OPERACAO DATE DEFAULT SYSDATE,
    USUARIO VARCHAR2(30) DEFAULT USER,
    DADOS_ANTIGOS CLOB,
    DADOS_NOVOS CLOB
);



/*Trigger de Auditoria Genérica
A trigger genérica será criada para cada tabela que requer auditoria. Ela registra os dados antigos e novos, dependendo do tipo de operação.

Exemplo para a Tabela Aluno*/

CREATE OR REPLACE TRIGGER EDUBOLSA.TRG_AUDITORIA_ALUNO
AFTER INSERT OR UPDATE OR DELETE ON Aluno
FOR EACH ROW
BEGIN
   IF INSERTING THEN
      INSERT INTO EDUBOLSA.AUDITORIA (TABELA_ALTERADA, OPERACAO, DADOS_NOVOS)
      VALUES (
         'Aluno',
         'INSERT',
         TO_CLOB('ID_ALUNO: ' || :NEW.ID_ALUNO || ', NOME: ' || :NEW.NOME ||
                 ', CPF: ' || :NEW.CPF || ', DATA_NASCIMENTO: ' || TO_CHAR(:NEW.DATA_NASCIMENTO, 'YYYY-MM-DD') ||
                 ', SEXO: ' || :NEW.SEXO || ', RENDA_FAMILIAR: ' || :NEW.RENDA_FAMILIAR)
      );
   ELSIF UPDATING THEN
      INSERT INTO EDUBOLSA.AUDITORIA (TABELA_ALTERADA, OPERACAO, DADOS_ANTIGOS, DADOS_NOVOS)
      VALUES (
         'Aluno',
         'UPDATE',
         TO_CLOB('ID_ALUNO: ' || :OLD.ID_ALUNO || ', NOME: ' || :OLD.NOME || 
                 ', CPF: ' || :OLD.CPF || ', DATA_NASCIMENTO: ' || TO_CHAR(:OLD.DATA_NASCIMENTO, 'YYYY-MM-DD') || 
                 ', SEXO: ' || :OLD.SEXO || ', RENDA_FAMILIAR: ' || :OLD.RENDA_FAMILIAR),
         TO_CLOB('ID_ALUNO: ' || :NEW.ID_ALUNO || ', NOME: ' || :NEW.NOME || 
                 ', CPF: ' || :NEW.CPF || ', DATA_NASCIMENTO: ' || TO_CHAR(:NEW.DATA_NASCIMENTO, 'YYYY-MM-DD') || 
                 ', SEXO: ' || :NEW.SEXO || ', RENDA_FAMILIAR: ' || :NEW.RENDA_FAMILIAR)
      );
   ELSIF DELETING THEN
      INSERT INTO EDUBOLSA.AUDITORIA (TABELA_ALTERADA, OPERACAO, DADOS_ANTIGOS)
      VALUES (
         'Aluno',
         'DELETE',
         TO_CLOB('ID_ALUNO: ' || :OLD.ID_ALUNO || ', NOME: ' || :OLD.NOME || 
                 ', CPF: ' || :OLD.CPF || ', DATA_NASCIMENTO: ' || TO_CHAR(:OLD.DATA_NASCIMENTO, 'YYYY-MM-DD') || 
                 ', SEXO: ' || :OLD.SEXO || ', RENDA_FAMILIAR: ' || :OLD.RENDA_FAMILIAR)
      );
   END IF;
END;
/

/*Repetir para Outras Tabelas
Basta criar uma trigger semelhante para as outras tabelas (como Curso, Bolsa, etc.), adaptando os nomes das colunas e os dados a serem auditados.*/

